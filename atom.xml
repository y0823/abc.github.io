<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://y0823.github.io</id>
    <title>不学无术</title>
    <updated>2020-03-16T12:18:48.544Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://y0823.github.io"/>
    <link rel="self" href="https://y0823.github.io/atom.xml"/>
    <subtitle>不学无术，故而求学。</subtitle>
    <logo>https://y0823.github.io/images/avatar.png</logo>
    <icon>https://y0823.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 不学无术</rights>
    <entry>
        <title type="html"><![CDATA[作业神器，微软数学使用说明]]></title>
        <id>https://y0823.github.io/post/MS-SX/</id>
        <link href="https://y0823.github.io/post/MS-SX/">
        </link>
        <updated>2020-03-16T12:14:13.000Z</updated>
        <summary type="html"><![CDATA[<p>今年的疫情对学生的影响还是非常大的。尽管线下的课堂搬到了线上，但是效果肯定是要打了折扣。尤其是学生在缺少家长监督的情况下，大部分人的自觉性跟不上。</p>
<p>数学是一门主课，在线教育的时间远不如在家的多。很多家长都会额外给孩子买习题，也有不少是在网上下载习题。但是不管是买的习题还是下载的习题，基本上都是只给答案，而缺少解题思路及步骤。更有甚者，某些网上下载的习题，连答案都是没有的。</p>
<p>这就造成了两个问题：</p>
<ol>
<li><strong>学生可能不会做。在家中无人辅导。</strong></li>
<li><strong>学生做好了，但是家长要检查，没有答案，还要自己算。或者家长也不知道怎么求解。</strong></li>
</ol>
<p>好在信息时代，有很多APP是为解决这样的痛点而生。比如大咖***微软***就针对数学推出了***微软数学***这款APP，据说有人工智能AI黑科技加持，功夫一流。</p>
<p>***微软数学***支持IOS和Android系统。可以在各自的APP STORE搜索“<em><strong>微软数学</strong></em>“安装。覆盖了小，初，高的数学知识。</p>
<figure data-type="image" tabindex="1"><img src="https://y0823.github.io/post-images/1584360880237.png" alt="" loading="lazy"></figure>
<p>本文以IOS版本来介绍，为了详细说明，图片比较多，请耐心等待。</p>
<p>以下是APP的介绍：</p>
<blockquote>
<p>***微软数学***面向从小学，初中到高中各个级别和类型的数学问题，利用独有的人工智能数学解题引擎为广大同学与家长提供解题帮助。你只需拍照扫描一个数学算式便能得到详细的步骤解释和坐标图。此外你还可以通过手写输入方便地输入你的数学算式求解。你还可以利用***微软数学***为你生成同类型的习题以供你练习巩固。</p>
<p>功能亮点：</p>
<p>● 拍照搜题支持打印或者手写算式</p>
<p>● 手写输入支持Apple Pencil，像在纸上做题一样输入算式</p>
<p>● 利用科学计算器输入复杂的算式</p>
<p>● 求解题目得到详细步骤和坐标图</p>
<p>● 从你的手机相册中导入照片</p>
<p>● 方便地生成可打印的练习题</p>
<p>支持多种问题类型：</p>
<p>算数：实数，复数，最大公约数，最小公倍数，因数分解</p>
<p>初级代数：方根，指数（幂）运算，分数</p>
<p>代数：一元二次方程，方程组，不等式，代数式，线性方程作图，一元二次方程作图等</p>
<p>微积分：求和，极限，求导数，积分</p>
<p>统计（数列）：平均数，中位数，取模，标准差，排列，组合</p>
<p>还有更多类型等待你的探索</p>
</blockquote>
<p>**一. **打开APP时，首先进入的是扫描模式。在屏幕上会显示一个长方形的对焦框。此时可将要扫描的数学题目置于对焦框中。如果内容超出对焦框的宽度，可以拖拽框的右下角的边框调整范围，确保题目处于框内。然后按下拍摄按钮。程序会进行识别。<br>
<img src="https://y0823.github.io/post-images/1584360889730.png" alt="" loading="lazy"><br>
图1</p>
<p>扫描识别成功率相当高（见图2 中的序号②），很快就会给出答案（见图2 中的序号③），下方有一个求解步骤（见图2中的序号④），点击求解步骤按钮，会给出详细的求解步骤（见图3、4）。在求解步骤中，右上角的两个按键分别为“分享”（图4中的②）和“书签”图4中的③）。书签功能其实就是为了以后便于查看记录，类似于收藏功能。<br>
<img src="https://y0823.github.io/post-images/1584360898216.png" alt="" loading="lazy"><br>
图2<br>
<img src="https://y0823.github.io/post-images/1584360902660.png" alt="" loading="lazy"><br>
图3<br>
<img src="https://y0823.github.io/post-images/1584360907204.png" alt="" loading="lazy"><br>
图4</p>
<p>在详细的求解步骤下方，有个共享按钮。通过共享，可以将这个题目分享给其他人，也可以在电脑端打开。更方便查看。见图5<br>
<img src="https://y0823.github.io/post-images/1584360912980.png" alt="" loading="lazy"><br>
图5</p>
<p>**二. **如果没有现成的打印好的题目用来扫描，APP也支持在屏幕上手写输入。只要不是写的太离谱，基本上都能准确识别。图6中的①处是切换到手写模式按钮；②是手写区；③是手写内容编辑区，可以撤销，删除，调整笔迹等。④是识别结果显示区，点击右侧的小飞机，便 可进行求解（图7）。<br>
<img src="https://y0823.github.io/post-images/1584360920776.png" alt="" loading="lazy"><br>
图6<br>
<img src="https://y0823.github.io/post-images/1584360926849.png" alt="" loading="lazy"><br>
图7</p>
<p>对于方程式的求解，APP还贴心的给出了图表，简直良心到家（见图8）。对于想对类似题目进行更多练习的人，APP还提供了类似题目的下载推荐（见图9）。<br>
<img src="https://y0823.github.io/post-images/1584360934605.png" alt="" loading="lazy"><br>
图8<br>
<img src="https://y0823.github.io/post-images/1584360940505.png" alt="" loading="lazy"><br>
图9</p>
<p><strong>三. ** ***微软数学</strong>*还提供了第三种模式。就是通过键盘输入题目。当然，这里所谓的键盘是屏幕上提供的虚拟键盘。这个模式可以简单的理解为一个高级模式的计算器。里面提供了各种数学公式里可能用到的元素。图10中，①为切换按钮，②为输入区，③为功能区，最左侧的三个点...（见图11中的②），可以切换到高级模式，提供了更高级的数学函数（见图11中的③）；最右侧的小飞机可以进入求解界面。后面的步骤和扫描手写方式的一样。<br>
<img src="https://y0823.github.io/post-images/1584360950708.png" alt="" loading="lazy"><br>
图10<br>
<img src="https://y0823.github.io/post-images/1584360955805.png" alt="" loading="lazy"><br>
图11</p>
<p><strong>四.</strong> <em><strong>微软数学</strong></em> 除了支持在屏幕上手写外，对于那种在纸上手写的题目处理起来也是游刃有余。字迹不太潦草的都轻松识别。见图12、13<br>
<img src="https://y0823.github.io/post-images/1584360964689.png" alt="" loading="lazy"><br>
图12<br>
<img src="https://y0823.github.io/post-images/1584360971079.png" alt="" loading="lazy"><br>
图13</p>
<p><em><em>五. <strong>也有本身已经是图片的题目，***微软数学</strong></em>也考虑的非常周到，提供了相应的处理功能。假如收到别人发过来的题目照片，保存到相册中。在</em>**微软数学***中切换到“扫描”界面（如图14中的①），点击左下角的图片按钮（如图14中的②），此时可以从你的手机相册中调用题目图片，后续的步骤和其他方式并没有不同。图14中的③，是开启闪光灯用来拍照时补光，相信大部分情况下是用不到的。<br>
<img src="https://y0823.github.io/post-images/1584360980946.png" alt="" loading="lazy"><br>
图14</p>
<p><strong>六.</strong> ***微软数学***的主要功能就是上述的几个。还有一些辅助功能，隐藏在左上角的功能区。点击左上角的功能按钮（见图15），便 可进入辅助功能界面。第一个功能标签是“书签”（见图16），这里保存着在前面步骤操作中加了标签的题目。第二个功能标签是“历史”，这里保存着曾经求解过的题目，便于回看（见图17）。第三个功能标签是“示例”，没有太大用处，只是用来展示其功能用法，一般用不到（见图18）。<br>
<img src="https://y0823.github.io/post-images/1584360993700.png" alt="" loading="lazy"><br>
图15<br>
<img src="https://y0823.github.io/post-images/1584360998085.png" alt="" loading="lazy"><br>
图16<br>
<img src="https://y0823.github.io/post-images/1584361003584.png" alt="" loading="lazy"><br>
图17<br>
<img src="https://y0823.github.io/post-images/1584361008536.png" alt="" loading="lazy"></p>
]]></summary>
        <content type="html"><![CDATA[<p>今年的疫情对学生的影响还是非常大的。尽管线下的课堂搬到了线上，但是效果肯定是要打了折扣。尤其是学生在缺少家长监督的情况下，大部分人的自觉性跟不上。</p>
<p>数学是一门主课，在线教育的时间远不如在家的多。很多家长都会额外给孩子买习题，也有不少是在网上下载习题。但是不管是买的习题还是下载的习题，基本上都是只给答案，而缺少解题思路及步骤。更有甚者，某些网上下载的习题，连答案都是没有的。</p>
<p>这就造成了两个问题：</p>
<ol>
<li><strong>学生可能不会做。在家中无人辅导。</strong></li>
<li><strong>学生做好了，但是家长要检查，没有答案，还要自己算。或者家长也不知道怎么求解。</strong></li>
</ol>
<p>好在信息时代，有很多APP是为解决这样的痛点而生。比如大咖***微软***就针对数学推出了***微软数学***这款APP，据说有人工智能AI黑科技加持，功夫一流。</p>
<p>***微软数学***支持IOS和Android系统。可以在各自的APP STORE搜索“<em><strong>微软数学</strong></em>“安装。覆盖了小，初，高的数学知识。</p>
<figure data-type="image" tabindex="1"><img src="https://y0823.github.io/post-images/1584360880237.png" alt="" loading="lazy"></figure>
<p>本文以IOS版本来介绍，为了详细说明，图片比较多，请耐心等待。</p>
<p>以下是APP的介绍：</p>
<blockquote>
<p>***微软数学***面向从小学，初中到高中各个级别和类型的数学问题，利用独有的人工智能数学解题引擎为广大同学与家长提供解题帮助。你只需拍照扫描一个数学算式便能得到详细的步骤解释和坐标图。此外你还可以通过手写输入方便地输入你的数学算式求解。你还可以利用***微软数学***为你生成同类型的习题以供你练习巩固。</p>
<p>功能亮点：</p>
<p>● 拍照搜题支持打印或者手写算式</p>
<p>● 手写输入支持Apple Pencil，像在纸上做题一样输入算式</p>
<p>● 利用科学计算器输入复杂的算式</p>
<p>● 求解题目得到详细步骤和坐标图</p>
<p>● 从你的手机相册中导入照片</p>
<p>● 方便地生成可打印的练习题</p>
<p>支持多种问题类型：</p>
<p>算数：实数，复数，最大公约数，最小公倍数，因数分解</p>
<p>初级代数：方根，指数（幂）运算，分数</p>
<p>代数：一元二次方程，方程组，不等式，代数式，线性方程作图，一元二次方程作图等</p>
<p>微积分：求和，极限，求导数，积分</p>
<p>统计（数列）：平均数，中位数，取模，标准差，排列，组合</p>
<p>还有更多类型等待你的探索</p>
</blockquote>
<p>**一. **打开APP时，首先进入的是扫描模式。在屏幕上会显示一个长方形的对焦框。此时可将要扫描的数学题目置于对焦框中。如果内容超出对焦框的宽度，可以拖拽框的右下角的边框调整范围，确保题目处于框内。然后按下拍摄按钮。程序会进行识别。<br>
<img src="https://y0823.github.io/post-images/1584360889730.png" alt="" loading="lazy"><br>
图1</p>
<p>扫描识别成功率相当高（见图2 中的序号②），很快就会给出答案（见图2 中的序号③），下方有一个求解步骤（见图2中的序号④），点击求解步骤按钮，会给出详细的求解步骤（见图3、4）。在求解步骤中，右上角的两个按键分别为“分享”（图4中的②）和“书签”图4中的③）。书签功能其实就是为了以后便于查看记录，类似于收藏功能。<br>
<img src="https://y0823.github.io/post-images/1584360898216.png" alt="" loading="lazy"><br>
图2<br>
<img src="https://y0823.github.io/post-images/1584360902660.png" alt="" loading="lazy"><br>
图3<br>
<img src="https://y0823.github.io/post-images/1584360907204.png" alt="" loading="lazy"><br>
图4</p>
<p>在详细的求解步骤下方，有个共享按钮。通过共享，可以将这个题目分享给其他人，也可以在电脑端打开。更方便查看。见图5<br>
<img src="https://y0823.github.io/post-images/1584360912980.png" alt="" loading="lazy"><br>
图5</p>
<p>**二. **如果没有现成的打印好的题目用来扫描，APP也支持在屏幕上手写输入。只要不是写的太离谱，基本上都能准确识别。图6中的①处是切换到手写模式按钮；②是手写区；③是手写内容编辑区，可以撤销，删除，调整笔迹等。④是识别结果显示区，点击右侧的小飞机，便 可进行求解（图7）。<br>
<img src="https://y0823.github.io/post-images/1584360920776.png" alt="" loading="lazy"><br>
图6<br>
<img src="https://y0823.github.io/post-images/1584360926849.png" alt="" loading="lazy"><br>
图7</p>
<p>对于方程式的求解，APP还贴心的给出了图表，简直良心到家（见图8）。对于想对类似题目进行更多练习的人，APP还提供了类似题目的下载推荐（见图9）。<br>
<img src="https://y0823.github.io/post-images/1584360934605.png" alt="" loading="lazy"><br>
图8<br>
<img src="https://y0823.github.io/post-images/1584360940505.png" alt="" loading="lazy"><br>
图9</p>
<p><strong>三. ** ***微软数学</strong>*还提供了第三种模式。就是通过键盘输入题目。当然，这里所谓的键盘是屏幕上提供的虚拟键盘。这个模式可以简单的理解为一个高级模式的计算器。里面提供了各种数学公式里可能用到的元素。图10中，①为切换按钮，②为输入区，③为功能区，最左侧的三个点...（见图11中的②），可以切换到高级模式，提供了更高级的数学函数（见图11中的③）；最右侧的小飞机可以进入求解界面。后面的步骤和扫描手写方式的一样。<br>
<img src="https://y0823.github.io/post-images/1584360950708.png" alt="" loading="lazy"><br>
图10<br>
<img src="https://y0823.github.io/post-images/1584360955805.png" alt="" loading="lazy"><br>
图11</p>
<p><strong>四.</strong> <em><strong>微软数学</strong></em> 除了支持在屏幕上手写外，对于那种在纸上手写的题目处理起来也是游刃有余。字迹不太潦草的都轻松识别。见图12、13<br>
<img src="https://y0823.github.io/post-images/1584360964689.png" alt="" loading="lazy"><br>
图12<br>
<img src="https://y0823.github.io/post-images/1584360971079.png" alt="" loading="lazy"><br>
图13</p>
<p><em><em>五. <strong>也有本身已经是图片的题目，***微软数学</strong></em>也考虑的非常周到，提供了相应的处理功能。假如收到别人发过来的题目照片，保存到相册中。在</em>**微软数学***中切换到“扫描”界面（如图14中的①），点击左下角的图片按钮（如图14中的②），此时可以从你的手机相册中调用题目图片，后续的步骤和其他方式并没有不同。图14中的③，是开启闪光灯用来拍照时补光，相信大部分情况下是用不到的。<br>
<img src="https://y0823.github.io/post-images/1584360980946.png" alt="" loading="lazy"><br>
图14</p>
<p><strong>六.</strong> ***微软数学***的主要功能就是上述的几个。还有一些辅助功能，隐藏在左上角的功能区。点击左上角的功能按钮（见图15），便 可进入辅助功能界面。第一个功能标签是“书签”（见图16），这里保存着在前面步骤操作中加了标签的题目。第二个功能标签是“历史”，这里保存着曾经求解过的题目，便于回看（见图17）。第三个功能标签是“示例”，没有太大用处，只是用来展示其功能用法，一般用不到（见图18）。<br>
<img src="https://y0823.github.io/post-images/1584360993700.png" alt="" loading="lazy"><br>
图15<br>
<img src="https://y0823.github.io/post-images/1584360998085.png" alt="" loading="lazy"><br>
图16<br>
<img src="https://y0823.github.io/post-images/1584361003584.png" alt="" loading="lazy"><br>
图17<br>
<img src="https://y0823.github.io/post-images/1584361008536.png" alt="" loading="lazy"></p>
<!-- more -->
<p>图18</p>
<p>总的来说，***微软数学***这个APP功能上并不复杂，但是足够好用。总结一下其优点：</p>
<ol>
<li>**微软出品，品质保证，人工智能AI加持。 **</li>
<li><strong>计算速度很快，基本没有延迟</strong></li>
<li><strong>免费，良心之作。</strong></li>
<li><strong>上手简单，不费脑。</strong></li>
<li><strong>识别率非常高。</strong></li>
</ol>
<p>真的是可以解救学生与家长于水火。但是此软件更适用于自觉性高的学生，否则用来抄答案就背离了它的初衷了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用POWER QUERY智能改变数据结构的实现方法]]></title>
        <id>https://y0823.github.io/post/li-yong-power-query-zhi-neng-gai-bian-shu-ju-jie-gou-de-shi-xian-fang-fa/</id>
        <link href="https://y0823.github.io/post/li-yong-power-query-zhi-neng-gai-bian-shu-ju-jie-gou-de-shi-xian-fang-fa/">
        </link>
        <updated>2020-03-05T14:13:14.000Z</updated>
        <content type="html"><![CDATA[<p>在学习Power Query的时候，看到老师讲到一个利用Rercord功能来实现数据结构转换的示例。颇有些复杂。因为里面用的函数和嵌套也是比较多，比较容易晕头。于是自己尝试用不一样的方法来解决，经过摸索，用了不一样的方法来实现。现将方法记录下来，以备后查。</p>
<ul>
<li>
<p><strong>先上示例文件截图</strong></p>
<ul>
<li>​	 源文件内容如下<br>
<img src="https://y0823.github.io/post-images/1583418199605.png" alt="" loading="lazy"></li>
</ul>
</li>
</ul>
<p>源图<br>
<img src="https://y0823.github.io/post-images/1583418104504.png" alt="" loading="lazy"><br>
效果图</p>
<ul>
<li>
<p><strong>个人摸索方法笔记</strong></p>
<ol>
<li>载入表到POWER QUERY</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://y0823.github.io/post-images/1583418266416.png" alt="" loading="lazy"></figure>
<p>图1</p>
<p>​	2. 由于每个家庭成员的数量不一样，因此需要先规划好能容得下每家成员的最大列数。这样保证每个家庭成员都能显示在列中。否则会默认取第一个家庭成员家庭的数量作为列的数量，会造成成员数量超过第一个家庭成员数量的家庭成员显示不全。提取最大家庭成员数量的公式：</p>
</li>
</ul>
<p><code>= List.Max(Table.Group(源, {&quot;户主&quot;}, {{&quot;计数&quot;, each Table.RowCount(_)}})[计数])</code></p>
<p>​	将此步骤重命名为pcount，以备后续步骤引用方便。<br>
<img src="https://y0823.github.io/post-images/1583418296496.png" alt="" loading="lazy"><br>
​	图2</p>
<p>​			3. 利用分组功能，并修改公式，将家庭关系和成员连接起来，并且用record.fromlist生成每个家庭的record。公式为</p>
<p><code>= Table.Group( 源, {&quot;户主&quot;}, {&quot;计数&quot;, each Record.FromList(List.Transform({0..pcount-1},(x)=&gt;_[关系]{x}&amp;[成员]{x} ),{&quot;1&quot;..Text.From(pcount)})})</code></p>
<p>其中</p>
<p><code>List.Transform({0..pcount-1},(x)=&gt;_[关系]{x}&amp;[成员]{x} )</code></p>
<p>这段函数是将每个家庭的关系和成员连接起来，pcount是上一步中计算出来的最大成员数量。</p>
<p><code>{&quot;1&quot;..Text.From(pcount)}</code>这个函数是作为record.fromlist函数的第二参数使用，目的是生成字段名称，这里生成的字段名称为{&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;}。但是这样生成的record，因为有些家庭成员数量达不到pcount的数量，因此会出现error。但这个不影响，会在后面的步骤会来解决。<br>
<img src="https://y0823.github.io/post-images/1583418323356.png" alt="" loading="lazy"><br>
图3</p>
<ol start="4">
<li>
<p>生成Record后，就要将其展开。但是如果直接用鼠标将其展开的话，会显示固定的列名称，即{&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;}，并且这样的列名称在源数据变化时，不会跟着改变。也就是说，假设最大成员数量有变化时，用这种方法展开的表，列数并不会有变化。这是个比较大的问题，非常不智能。<br>
<img src="https://y0823.github.io/post-images/1583418332194.png" alt="" loading="lazy"><br>
图片4</p>
</li>
<li>
<p>为了避免这种情况，在扩展这一步，需要使用动态列名称，保证成员人数变化时，列字段名也跟着变化。公式为</p>
</li>
</ol>
<pre><code>  `= Table.ExpandRecordColumn(分组的行, &quot;计数&quot;, {&quot;1&quot;..Text.From(pcount)}, {&quot;1&quot;..Text.From(pcount)})`
</code></pre>
<p>其中{&quot;1&quot;..Text.From(pcount)}为动态列字段名，最大成员数量变化时，列字段名称也会跟着伸缩<br>
<img src="https://y0823.github.io/post-images/1583418425026.png" alt="" loading="lazy"><br>
图片5</p>
<p><img src="https://y0823.github.io/post-images/1583418437271.png" alt="" loading="lazy"><br>
成员减少后，列数减少</p>
<p><img src="https://y0823.github.io/post-images/1583418447066.png" alt="" loading="lazy"><br>
成员增加后，列数增加</p>
<ol start="6">
<li>展开后，前面步骤中出现的error会显示出来。我们是不希望这些error加载到excel中后再进行二次处理。所以我们在power query中就处理好。如果用正常的全选 →替换错误值，是可以替换掉error的。但和第4步面临同样的问题，就是列数变化后，替换的列仍然保持不变，造成新增加的列中的error无法被替换。因此，也需要使用动态列字段名。公式为</li>
</ol>
<p><code>= Table.ReplaceErrorValues(#&quot;展开的“计数”&quot;, List.Transform({&quot;1&quot;..Text.From(pcount)},each {_,&quot;&quot;}))</code></p>
<p>因为替换错误值函数Table.ReplaceErrorValues，第二参数是类似于{{&quot;户主&quot;, &quot;&quot;}, {&quot;1&quot;, &quot;&quot;}, {&quot;2&quot;, &quot;&quot;}, {&quot;3&quot;, &quot;&quot;}, {&quot;4&quot;, &quot;&quot;}, {&quot;5&quot;, &quot;&quot;}, {&quot;6&quot;, &quot;&quot;}}这样的LIST结构。所以需要用<font color=red><code>List.Transform({&quot;1&quot;..Text.From(pcount)},each {_,&quot;&quot;})</code></font>构造这样的一个LIST，来实现动态替换的效果。</p>
<p><img src="https://y0823.github.io/post-images/1583418610377.png" alt="" loading="lazy"><br>
图片6<br>
<img src="https://y0823.github.io/post-images/1583418650488.png" alt="" loading="lazy"><br>
非动态替换<br>
<img src="https://y0823.github.io/post-images/1583418658348.png" alt="" loading="lazy"><br>
图片7</p>
<ol start="7">
<li>这样就最终实现了我们想要的结果。而且步骤也并不多，相对来讲可读性还算好。关键是可以自由扩展。因为我也是初学者，也许有更好的方法，留待将来发现。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用power query 实现excel单元格内多个数字提取求和]]></title>
        <id>https://y0823.github.io/post/shi-yong-power-query-shi-xian-excel-dan-yuan-ge-nei-duo-ge-shu-zi-ti-qu-qiu-he/</id>
        <link href="https://y0823.github.io/post/shi-yong-power-query-shi-xian-excel-dan-yuan-ge-nei-duo-ge-shu-zi-ti-qu-qiu-he/">
        </link>
        <updated>2020-03-03T01:59:47.000Z</updated>
        <content type="html"><![CDATA[<p>数据的统计需要源数据是符合规则的。但是经常会碰到一些不规则的数据。比如图1中的数据，是将产品名称及数量合并在一起的。这就给后期的统计造成了相当大的麻烦。虽然网上也不乏使用excel函数解决的教程，但是多数针对的是一个单元格中只有一个数字的情况。并且函数处理这种情况还是颇为麻烦。现在用POWER QUERY来处理，就相对容易得多。</p>
<figure data-type="image" tabindex="1"><img src="https://y0823.github.io/post-images/1583200838797.jpg" alt="图1 不带分隔符的表" loading="lazy"></figure>
<center>图1 不带分隔符的表</center>
<p>因为这涉及到几个数字的提取，并且在提取时要保证数字的完整。也就是说，3就是3，31就是31，不能识别为3和1 ，否则求和结果就是错误的。事实上，有不少power query教程都有这样的示例。但我查询一下，基本上都是针对带有明显分隔符的数据来操作的（如下图）。先按分隔符，将每一个包括数字的部分拆分到一个列表中，然后 再使用替换字符的方法，留下数字，再求和。由于有固定的分隔符，拆分成列表就比较容易。对于没有明显规律的分隔符的，就比较麻烦一点了。大部分教程中都没有提到这种状况的解决方法。经过摸索，基本上成功的解决这个麻烦。</p>
<figure data-type="image" tabindex="2"><img src="https://y0823.github.io/post-images/1583200970201.jpg" alt="" loading="lazy"></figure>
<center> 图2 带分隔符的表</center>
<p>大体思路如下：</p>
<ol>
<li>由于数字都是跟在文本后面的，没有明显的分隔符，所以只能考虑使用文本来进行分隔。</li>
<li>如果用汉字集来分隔的话，那么要取的汉字太多，效率会很低。转变思路，先将单元格中文本取出来，然后以此作为依据进行分隔。这样虽然多一步骤，但是要查找替换的文本只有几个字，效率提高的不是一点点。</li>
<li>以提取出来的文本对单元格进行分隔，将数字分离到一个LIST中，再转换为数值型，求和即可。</li>
</ol>
<p>以下为实现步骤：</p>
<ol>
<li>提取除数字之外的文本。由于要提取的数值部分包括0-9数字和作为小数点的.。因此先将这部分移除，剩余的即为要用的文本部分。</li>
</ol>
<p>代码</p>
<p><code>= Table.AddColumn(源, &quot;自定义&quot;, each Text.Remove([列1],{&quot;0&quot;..&quot;9&quot;,&quot;.&quot;}))</code></p>
<p>由于后面要根据提取出来的文本进行替换，以获得数值部分，所以 将0-9及“. ”先替换掉。这个“.”一定要放在里面，否则替换出来的结果会将小数点去掉，使小数变成整数，造成结果错误。<br>
替换后结果如下：</p>
<figure data-type="image" tabindex="3"><img src="https://y0823.github.io/post-images/1583201015136.jpg" alt="" loading="lazy"></figure>
<center>图3 提取文本 </center>
<p>此时我们便获得了用来分隔原始数据的依据。</p>
<ol start="2">
<li>用Text.SplitAny，以自定义列中获得的文本为分隔符，将列1中的文本拆分成LIST，只包含数字和“.”。但要注意的是，如果数据不规范的话，有可能list会存在&quot;.&quot;这样单独的一个数据。这个在后面会做处理。</li>
</ol>
<p>代码</p>
<p><code>= Table.AddColumn(提取汉字及字符, &quot;提取数字&quot;, each Text.SplitAny([列1],[自定义]))</code></p>
<figure data-type="image" tabindex="4"><img src="https://y0823.github.io/post-images/1583201032377.jpg" alt="" loading="lazy"></figure>
<center>图4 分隔数字到list </center>
<ol start="3">
<li>替换出来的list中包括有空白和&quot;.&quot;,这样的话是无法进行求和的。所以要把这两部分排除掉。</li>
</ol>
<p>代码</p>
<p><code>= Table.AddColumn(提取数字, &quot;排除无用字符&quot;, each List.Select([提取数字],each _&lt;&gt;&quot;&quot; and _ &lt;&gt;&quot;.&quot;))</code><br>
<img src="https://y0823.github.io/post-images/1583201055699.jpg" alt="" loading="lazy"></p>
<center> 图5 列表中的空白和"."都被排除 </center>
<ol start="4">
<li>此时的列表中的内容都为文本格式，没有 办法求和。所以需要转换为数值型</li>
</ol>
<p>代码</p>
<p><code>= Table.AddColumn(去杂, &quot;转换&quot;, each List.Transform( [排除无用字符],Number.From))</code></p>
<p><img src="https://y0823.github.io/post-images/1583201070429.jpg" alt="" loading="lazy"><br>
| 图6 转换为数值                                               |</p>
<ol start="5">
<li>最后用List.Sum进行求和即可得到结果</li>
</ol>
<p>代码</p>
<p><code>＝Table.AddColumn(数值转换, &quot;求和&quot;, each List.Sum([转换]))</code></p>
<figure data-type="image" tabindex="5"><img src="https://y0823.github.io/post-images/1583201086387.jpg" alt="" loading="lazy"></figure>
<center>图7 求和 </center>
<p>最后上载到excel中即可。</p>
<figure data-type="image" tabindex="6"><img src="https://y0823.github.io/post-images/1583201100187.jpg" alt="" loading="lazy"></figure>
<center>图8 最终效果 </center>
<p>以上这么多步骤是为了便于理解，事实上可以简化为一步即可</p>
<p>代码</p>
<p><code>= Table.AddColumn(源, &quot;合计金额&quot;, each List.Sum(List.Transform( List.Select(Text.SplitAny([列1], Text.Remove([列1],{&quot;0&quot;..&quot;9&quot;,&quot;.&quot;}) ),each _&lt;&gt;&quot;&quot; and _ &lt;&gt;&quot;.&quot;),Number.From)))</code></p>
<figure data-type="image" tabindex="7"><img src="https://y0823.github.io/post-images/1583201111324.jpg" alt="" loading="lazy"></figure>
<center>图9 一步到位 </center>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[EXCEL 单元格中文提取拼音首字母的实现方法]]></title>
        <id>https://y0823.github.io/post/excel-dan-yuan-ge-zhong-wen-ti-qu-pin-yin-shou-zi-mu-de-shi-xian-fang-fa/</id>
        <link href="https://y0823.github.io/post/excel-dan-yuan-ge-zhong-wen-ti-qu-pin-yin-shou-zi-mu-de-shi-xian-fang-fa/">
        </link>
        <updated>2020-03-02T13:58:01.000Z</updated>
        <content type="html"><![CDATA[<p>在某些领域的工作中，经常会碰到中文名称需要提取每个字拼音首字母的情形，以便于用来进行检索。比如图书名称索引（当然真正的图书馆大量的图书并不会用EXCEL来实现），如下图右侧的字母缩写</p>
<figure data-type="image" tabindex="1"><img src="https://y0823.github.io/post-images/1583156708134.png" alt="" loading="lazy"></figure>
<p>事实上，对于汉字转拼音首字母，网上有一套现成的方案。直接引用就可以实现。<strong>本文图中公式前后的一对｛｝均非手工输入，而是在输入公式内容后，同时按CTRL+SHIFT+ENTER实现。</strong></p>
<p>公式如下：</p>
<p><code>=LOOKUP(MID(A1,ROW($1:$6),1), {&quot;&quot;,&quot;&quot;;&quot;吖&quot;,&quot;A&quot;;&quot;八&quot;,&quot;B&quot;;&quot;攃&quot;,&quot;C&quot;;&quot;咑&quot;,&quot;D&quot;;&quot;妸&quot;,&quot;E&quot;;&quot;发&quot;,&quot;F&quot;;&quot;旮&quot;,&quot;G&quot;;&quot;哈&quot;,&quot;H&quot;;&quot;丌&quot;,&quot;J&quot;;&quot;咔&quot;,&quot;K&quot;;&quot;垃&quot;,&quot;L&quot;;&quot;妈&quot;,&quot;M&quot;;&quot;乸&quot;,&quot;N&quot;;&quot;噢&quot;,&quot;O&quot;;&quot;帊&quot;,&quot;P&quot;;&quot;七&quot;,&quot;Q&quot;;&quot;冄&quot;,&quot;R&quot;;&quot;仨&quot;,&quot;S&quot;;&quot;他&quot;,&quot;T&quot;;&quot;屲&quot;,&quot;W&quot;;&quot;夕&quot;,&quot;X&quot;;&quot;丫&quot;,&quot;Y&quot;;&quot;帀&quot;,&quot;Z&quot;})</code></p>
<p>这其中 ROW($1:$6)的作用是形成一个数组，即｛1,2,3,4,5,6}。当然了，这个公式仅限于取6个汉字的拼音首字母。正常使用时，为了保证可扩展性，可以使用ROW(INDIRECT(&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>:</mo></mrow><annotation encoding="application/x-tex">1:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>&quot;&amp;LEN(A1)))这个公式来生成动态的数组。它会自动判断单元格有多少字符。如果用可扩展的公式的话，应该是这样的公式：</p>
<p><code>=LOOKUP(MID(A1,ROW(INDIRECT(&quot;$1:$&quot;&amp;LEN(A1))),1), {&quot;&quot;,&quot;&quot;;&quot;吖&quot;,&quot;A&quot;;&quot;八&quot;,&quot;B&quot;;&quot;攃&quot;,&quot;C&quot;;&quot;咑&quot;,&quot;D&quot;;&quot;妸&quot;,&quot;E&quot;;&quot;发&quot;,&quot;F&quot;;&quot;旮&quot;,&quot;G&quot;;&quot;哈&quot;,&quot;H&quot;;&quot;丌&quot;,&quot;J&quot;;&quot;咔&quot;,&quot;K&quot;;&quot;垃&quot;,&quot;L&quot;;&quot;妈&quot;,&quot;M&quot;;&quot;乸&quot;,&quot;N&quot;;&quot;噢&quot;,&quot;O&quot;;&quot;帊&quot;,&quot;P&quot;;&quot;七&quot;,&quot;Q&quot;;&quot;冄&quot;,&quot;R&quot;;&quot;仨&quot;,&quot;S&quot;;&quot;他&quot;,&quot;T&quot;;&quot;屲&quot;,&quot;W&quot;;&quot;夕&quot;,&quot;X&quot;;&quot;丫&quot;,&quot;Y&quot;;&quot;帀&quot;,&quot;Z&quot;})</code></p>
<p>​        这个公式得出的结果只能是第一个汉字的拼音首字母，虽然公式已经将每个汉字的拼音首字母提取了，但是并没有通过一个文本连接函数将其连接起来，形成一个完整的文本。文本连接函数有和个，CONCATENATE这个函数并不支持数组公式，所以无法使用。从2019开始，包括OFFICE365，内置的concat 、textjoin这两个函数是支持数组公式的。可以使用这两个公式中的任意一个。区别在于concat只能简单的将数组中的文本连接成一个文本，而textjoin是可以在需要连接的文本中间添加连接符。</p>
<ul>
<li><strong>使用concat方法实现</strong></li>
</ul>
<p><code>=CONCAT((LOOKUP(MID(A1,ROW(INDIRECT(&quot;$1:$&quot;&amp;LEN(A1))),1), {&quot;&quot;,&quot;&quot;;&quot;吖&quot;,&quot;A&quot;;&quot;八&quot;,&quot;B&quot;;&quot;攃&quot;,&quot;C&quot;;&quot;咑&quot;,&quot;D&quot;;&quot;妸&quot;,&quot;E&quot;;&quot;发&quot;,&quot;F&quot;;&quot;旮&quot;,&quot;G&quot;;&quot;哈&quot;,&quot;H&quot;;&quot;丌&quot;,&quot;J&quot;;&quot;咔&quot;,&quot;K&quot;;&quot;垃&quot;,&quot;L&quot;;&quot;妈&quot;,&quot;M&quot;;&quot;乸&quot;,&quot;N&quot;;&quot;噢&quot;,&quot;O&quot;;&quot;帊&quot;,&quot;P&quot;;&quot;七&quot;,&quot;Q&quot;;&quot;冄&quot;,&quot;R&quot;;&quot;仨&quot;,&quot;S&quot;;&quot;他&quot;,&quot;T&quot;;&quot;屲&quot;,&quot;W&quot;;&quot;夕&quot;,&quot;X&quot;;&quot;丫&quot;,&quot;Y&quot;;&quot;帀&quot;,&quot;Z&quot;})))</code></p>
<figure data-type="image" tabindex="2"><img src="https://y0823.github.io/post-images/1583156753804.png" alt="" loading="lazy"></figure>
<ul>
<li><strong>使用TEXTJOIN方法实现</strong></li>
</ul>
<p><code>=TEXTJOIN(&quot;-&quot;,TRUE,(LOOKUP(MID(A1,ROW(INDIRECT(&quot;$1:$&quot;&amp;LEN(A1))),1), {&quot;&quot;,&quot;&quot;;&quot;吖&quot;,&quot;A&quot;;&quot;八&quot;,&quot;B&quot;;&quot;攃&quot;,&quot;C&quot;;&quot;咑&quot;,&quot;D&quot;;&quot;妸&quot;,&quot;E&quot;;&quot;发&quot;,&quot;F&quot;;&quot;旮&quot;,&quot;G&quot;;&quot;哈&quot;,&quot;H&quot;;&quot;丌&quot;,&quot;J&quot;;&quot;咔&quot;,&quot;K&quot;;&quot;垃&quot;,&quot;L&quot;;&quot;妈&quot;,&quot;M&quot;;&quot;乸&quot;,&quot;N&quot;;&quot;噢&quot;,&quot;O&quot;;&quot;帊&quot;,&quot;P&quot;;&quot;七&quot;,&quot;Q&quot;;&quot;冄&quot;,&quot;R&quot;;&quot;仨&quot;,&quot;S&quot;;&quot;他&quot;,&quot;T&quot;;&quot;屲&quot;,&quot;W&quot;;&quot;夕&quot;,&quot;X&quot;;&quot;丫&quot;,&quot;Y&quot;;&quot;帀&quot;,&quot;Z&quot;})))</code></p>
<figure data-type="image" tabindex="3"><img src="https://y0823.github.io/post-images/1583156766471.png" alt="" loading="lazy"></figure>
<p>这样就实现了汉字取拼音首字母的功能。但这个方法仍然有一个缺点，那就是无法区分多音字。</p>
]]></content>
    </entry>
</feed>